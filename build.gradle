buildscript {
	repositories {
		mavenLocal()
		maven { url 'https://maven.aliyun.com/repository/google/' }
		maven { url 'https://maven.aliyun.com/repository/public/' }
		maven { url 'https://maven.aliyun.com/repository/spring/' }
		maven { url 'https://maven.aliyun.com/repository/gradle-plugin/' }
		maven { url 'https://maven.aliyun.com/repository/spring-plugin/' }
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:3.0.6")
		classpath "io.spring.gradle:dependency-management-plugin:1.1.0.RELEASE"
	}
}

plugins {
	id 'java'
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation'org.springframework.boot:spring-boot-starter-validation'

	// implementation 'com.mysql:mysql-connector-j'
	// h2 DB
	// implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// runtimeOnly 'com.h2database:h2'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Jakarta dependencies
	implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
	//implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// spring security
//	implementation 'org.springframework.boot:spring-boot-starter-security'//	implementation "org.springframework.security:spring-security-test"
//	implementation 'org.springframework.security:spring-security-config:6.2.0'

	// jwt
//	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
//	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
//	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// stomp
	implementation 'org.webjars:stomp-websocket:2.3.4'

	implementation 'org.springframework.boot:spring-boot-starter-freemarker'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	//implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	//implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
}

sourceSets{
	main.java.srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
}
tasks.named('test') {
	useJUnitPlatform()
}
